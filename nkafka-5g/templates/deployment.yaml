apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nkafka-helm.fullname" . }}
  labels:
    {{- include "nkafka-helm.labels" . | nindent 4 }}
  #annotations:
  #  "helm.sh/hook": post-install
  #  "helm.sh/hook-weight": "1"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nkafka-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        {{- include "nkafka-helm.labels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "nkafka-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{ if or (.Values.initConfig.natsCheckEnabled) (.Values.initConfig.kafkaCheckEnabled) }}
      initContainers:
        {{ if .Values.initConfig.natsCheckEnabled }}
        - name: {{ .Chart.Name }}-check-nats
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          command: ['sh', '-c', 'until nc -z -v -w1 {{ tpl .Values.natsUrl . }}; do echo $(date) [CHECK-SERVICES] Waiting for NATS at {{ tpl .Values.natsUrl . }}; sleep 2; done']
        {{ end }}
        {{ if .Values.initConfig.kafkaCheckEnabled }}
        - name: {{ .Chart.Name }}-check-kafka
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          command: ['sh', '-c', 'echo "KAFKA_URL=\"{{ tpl .Values.kafkaUrl . }}\"" > kafka_url.py && python3 kafka-test.py {{ tpl .Values.initConfig.kafkaTopicsCheck . }}']
        {{ end }}
      {{ end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{ if eq (tpl .Values.accelleranLicense.enabled .) "true" }}
          image: "{{ .Values.image.repository }}-license:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{ else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: {{ include "nkafka-helm.fullname" . }}-5g-config
              mountPath: /5GConfig.toml
              subPath: "5GConfig.toml"
            - name: {{ include "nkafka-helm.fullname" . }}-5g-topics
              mountPath: /5GKafkaTopics.toml
              subPath: "5GKafkaTopics.toml"
            {{ if .Values.configs.logAllTopics }}
            - name: {{ include "nkafka-helm.fullname" . }}-all-topics
              mountPath: /allTopics.toml
              subPath: "allTopics.toml"
            {{ end }}
            {{ if eq (tpl .Values.accelleranLicense.enabled .) "true" }}
            - mountPath: "/etc/license/license.crt"
              subPath: "license.crt"
              name: accelleran-license
              readOnly: true
            {{ end }}
          #command: ["/bin/sh"]
          #args: ["-c", "sleep 1000"]
          command: ["/nkafka"]
          {{ if .Values.overrideArgs }}
          args:
            {{  range .Values.overrideArgs }}
            - {{ tpl . $ }}
            {{ end }}
          {{ else }}
          args: ["--kafka", "{{ tpl .Values.kafkaUrl . }}", "--group", "five-g", "--nats", "nats://{{ tpl .Values.natsUrl . }}", "-f", "/5GConfig.toml","-f", "/5GTopics.toml", "-f", "/5GKafkaTopics.toml", {{ if .Values.configs.logLevel }}{{ if eq .Values.configs.logLevel "info" }}"-v"{{ end }}{{ if eq .Values.configs.logLevel "debug" }}"-vv"{{ end }}{{ end }}]
          {{ end }}
#          ports:
#            - name: http
#              containerPort: 80
#              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if or (.Values.nodeSelector) (eq (tpl .Values.draxNodeSelectorEnabled .) "true") }}
      nodeSelector:
        {{ if .Values.nodeSelector }}
          {{- toYaml .Values.nodeSelector | nindent 8 }}
        {{ end }}
        {{ if eq (tpl .Values.draxNodeSelectorEnabled .) "true" }}
          {{- tpl (toYaml .Values.draxNodeSelector) $ | nindent 8 }}
        {{ end }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: {{ include "nkafka-helm.fullname" . }}-5g-config
          configMap:
            name: {{ include "nkafka-helm.fullname" . }}-5g-config

        - name: {{ include "nkafka-helm.fullname" . }}-5g-topics
          configMap:
            name: {{ include "nkafka-helm.fullname" . }}-5g-topics

        {{ if .Values.configs.logAllTopics }}
        - name: {{ include "nkafka-helm.fullname" . }}-all-topics
          configMap:
            name: {{ include "nkafka-helm.fullname" . }}-all-topics
        {{ end }}

        {{ if eq (tpl .Values.accelleranLicense.enabled .) "true" }}
        - name: accelleran-license
          secret:
            secretName: {{ tpl .Values.accelleranLicense.licenseSecretName . }}
        {{ end }}
