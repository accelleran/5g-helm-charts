nkafka-5g:
  enabled: false

acc-fiveg-amf-tester:

  # Enable or disable installation of component
  #   Value type: boolean
  #
  enabled: true


  # Special dRAX NodeSelector
  #   Description:  Besides the default NodeSelector field for each component,
  #                 there is a special dRAX NodeSelector. This can be shared
  #                 among all 5G Helm Charts to install all components on the
  #                 same node. To enable this feature, first set
  #                 "draxNodeSelectorEnabled" to "true" (using quotes for
  #                 string type!). Next, draxNodeSelector field is a map,
  #                 where you can input different labels to look for in nodes.
  #                 A default label is the "draxName", which can be shared
  #                 among all 5G Helm Charts. To have it shared, values from
  #                 the global-values.yaml are used. Therefore, a string to
  #                 reference those values should be placed.
  #   Value type:   string
  #   Example:
  #
  # draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  # draxNodeSelector:
  #   draxName: "{{ .Values.global.draxName }}"
  #
  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"


  # Version/tag of component
  #   Description:  The version/tag of the component's Docker image which is
  #                 used to pull it from DockerHub. The version/tag can be
  #                 specified per component, or this field can reference to
  #                 the global tag in the global-values.yaml.
  #   Value type:   string
  #   Example:
  #
  # image:
  #   tag: "{{ .Values.global.tag }}"
  #
  image:
    tag: "{{ .Values.global.tag }}"


  # NATS Settings
  #   Description:  The component uses NATS. The URL and PORT are defined here. They can be
  #                 specified or referenced from the global-values.yaml.
  #   Value type:   string
  #   Example:
  #
  # nats:
  #   url: "{{ .Values.global.natsUrl }}"
  #   port: "{{ .Values.global.natsPort }}"
  #
  nats:
    url: "{{ .Values.global.natsUrl }}"
    port: "{{ .Values.global.natsPort }}"


  # InitContainer settings
  #   Description:  This Helm Chart has an initContainer that can on deployment time discover IP
  #                 addresses of other services in Kubernetes. In the 'ips', specify a list of
  #                 IPs that should be discovered. When discovered, the IPs will be saved as
  #                 environmental variables in the main container. The list item is a map of two
  #                 elements:
  #                 i) url - which is the url to the services
  #                 ii) name- the name of the env variable where the IP will be saved. Because
  #                           its an environmental variable, the name filed has to be a
  #                           CAPITALIZED string
  #   Value type:   string
  #   Example:
  #
  #
  # initConfig:
  #   ips:
  #     - url: '{{ include "five-g-appl.fullname" . }}-gtp'
  #       name: "GTP_IP"
  #
  initConfig:
    ips:
      - url: '{{ include "five-g-appl.fullname" . }}-gtp'
        name: "GTP_IP"


  # Arguments for the 5G application
  #   Description:  The arguments for the 5G application run command are specified here. The
  #                 field args is a list. Each list items is a map of 2 fields:
  #                 i) name - the name of the argument
  #                 ii) values - the value of the argument
  #   Value type:   string
  #   Example:
  #
  # args:
  #   - name: "--own"
  #     value: "$POD_IP"
  #   - name: "--numLoops"
  #     value: "1"
  #
  args:
    - name: "--own"
      value: "$POD_IP"
    - name: "--numLoops"
      value: "1"


  # GTP Service Settings
  #   Description:  The settings of the GTP service exposed for this component. the
  #                 'gtpService' field is a map consisting of the following:
  #                 i) enabled - The service can be enabled or disabled using this boolean
  #                 ii) type - This is the Kubernetes Service Type (NodePort, LoadBalancer...)
  #                 iii) protocol - Kubernetes Service protocol (UDP, TCP, SCTP...)
  #                 iv) gtpUPort - Port number of the GTP User traffic port (default=2152)
  #                 v) loadBalancerIp - If the type is set to LoadBalancer, an explicit
  #                                     definition of the IP to be used can be set here. NOTE: It
  #                                     needs to be in the LoadBalancer IP range.
  #                 vi) gtpUNodePort - If the type is set to NodePort, an explicit definition of
  #                                    the PORT on which the service will be exposed can be set
  #                                    here. NOTE: Since NodePort is used, only ports defined for
  #                                    the Kubernetes NodePort can be used (default 30000-32999)
  #
  # gtpService:
  #   enabled: true
  #   type: LoadBalancer
  #   protocol: UDP
  #   gtpUPort: 2152
  #   loadBalancerIP: "{{ .Values.global.amfTesterGtpIp }}"
  #   gtpUNodePort: 31999
  #
  gtpService:
    enabled: true
    type: LoadBalancer
    protocol: UDP
    gtpUPort: 2152
    loadBalancerIP: "{{ .Values.global.amfTester1GtpIp }}"


  # NG Control Service Settings
  #   Description:  The settings of the NG Control service exposed for this component. the
  #                 'ngControlService' field is a map consisting of the following:
  #                 i) enabled - The service can be enabled or disabled using this boolean
  #                 ii) type - This is the Kubernetes Service Type (NodePort, LoadBalancer...)
  #                 iii) protocol - Kubernetes Service protocol (UDP, TCP, SCTP...)
  #                 iv) port - Port number of the service
  #                 v) loadBalancerIp - If the type is set to LoadBalancer, an explicit
  #                                     definition of the IP to be used can be set here. NOTE: It
  #                                     needs to be in the LoadBalancer IP range.
  #                 vi) nodePort - If the type is set to NodePort, an explicit definition of
  #                                    the PORT on which the service will be exposed can be set
  #                                    here. NOTE: Since NodePort is used, only ports defined for
  #                                    the Kubernetes NodePort can be used (default 30000-32999)
  #
  # ngControlService:
  #   enabled: true
  #   type: LoadBalancer
  #   protocol: SCTP
  #   port: 38412
  #   loadBalancerIP: "{{ .Values.global.amfTesterNgControlIp }}"
  #   nodePort: 31998
  #
  ngControlService:
    enabled: true
    type: LoadBalancer
    protocol: SCTP
    port: 38412
    loadBalancerIP: "{{ .Values.global.amfTester1NgControlIp }}"


acc-fiveg-du-tester:
  enabled: false

acc-fiveg-amf-controller:
  enabled: false

acc-fiveg-cu-up:
  enabled: false

acc-fiveg-cu-up-controller:
  enabled: false

acc-fiveg-ds-ctrl:
  enabled: false

acc-fiveg-du-controller:
  enabled: false

acc-fiveg-e1-cp:
  enabled: false

acc-fiveg-e1-sctp-up:
  enabled: false

acc-fiveg-f1-ap:
  enabled: false

acc-fiveg-gnb-controller:
  enabled: false

acc-fiveg-ng-ap:
  enabled: false

acc-fiveg-pm-controller:
  enabled: false

acc-fiveg-res-mgr:
  enabled: false

acc-fiveg-res-mgr-up:
  enabled: false

acc-fiveg-rr-ctrl:
  enabled: false

acc-fiveg-sctp:
  enabled: false