nkafka-5g:
  enabled: false

acc-fiveg-amf-tester:
  enabled: false

acc-fiveg-du-tester:
  enabled: false

acc-fiveg-amf-controller:
  enabled: false

acc-fiveg-cu-up:
  enabled: false

acc-fiveg-cu-up-controller:
  enabled: false

acc-fiveg-ds-ctrl:
  enabled: false

acc-fiveg-du-controller:
  enabled: false

acc-fiveg-e1-cp:
  enabled: false

acc-fiveg-e1-sctp-up:
  enabled: false

acc-fiveg-f1-ap:
  enabled: false

acc-fiveg-gnb-controller:
  enabled: false

acc-fiveg-ng-ap:

  # Enable or disable installation of component
  #   Value type: boolean
  #
  enabled: true


  # Special dRAX NodeSelector
  #   Description:  Besides the default NodeSelector field for each component,
  #                 there is a special dRAX NodeSelector. This can be shared
  #                 among all 5G Helm Charts to install all components on the
  #                 same node. To enable this feature, first set
  #                 "draxNodeSelectorEnabled" to "true" (using quotes for
  #                 string type!). Next, draxNodeSelector field is a map,
  #                 where you can input different labels to look for in nodes.
  #                 A default label is the "draxName", which can be shared
  #                 among all 5G Helm Charts. To have it shared, values from
  #                 the global-values.yaml are used. Therefore, a string to
  #                 reference those values should be placed.
  #   Value type:   string
  #   Example:
  #
  # draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  # draxNodeSelector:
  #   draxName: "{{ .Values.global.draxName }}"
  #
  draxNodeSelectorEnabled: "{{ .Values.global.draxNodeSelectorEnabled }}"
  draxNodeSelector:
    draxName: "{{ .Values.global.draxName }}"


  # Version/tag of component
  #   Description:  The version/tag of the component's Docker image which is
  #                 used to pull it from DockerHub. The version/tag can be
  #                 specified per component, or this field can reference to
  #                 the global tag in the global-values.yaml.
  #   Value type:   string
  #   Example:
  #
  # image:
  #   tag: "{{ .Values.global.tag }}"
  #
  image:
    tag: "{{ .Values.global.tag }}"


  # NATS Settings
  #   Description:  The component uses NATS. The URL and PORT are defined here. They can be
  #                 specified or referenced from the global-values.yaml.
  #   Value type:   string
  #   Example:
  #
  # nats:
  #   url: "{{ .Values.global.natsUrl }}"
  #   port: "{{ .Values.global.natsPort }}"
  #
  nats:
    url: "{{ .Values.global.natsUrl }}"
    port: "{{ .Values.global.natsPort }}"


  # REDIS Settings
  #   Description:  The component uses REDIS to read the configuration. The REDIS hostname and
  #                 PORT are defined here.
  #   Value type:   string
  #   Example:
  #
  # redisConfig:
  #   hostname: "{{ .Values.global.redisHostname }}"
  #   port: "{{ .Values.global.redisPort }}"
  #
  redisConfig:
    hostname: "{{ .Values.global.redisHostname }}"
    port: "{{ .Values.global.redisPort }}"


  # Bootstrap Instance ID
  #   Description:  This 5G component used an Instance ID defined in its Bootstrap Instance ID
  #                 file. The Instance ID is specified in this filed.
  #   Value type:   string
  #   Example:
  #
  # bootstrapId: "cucp_1"
  #
  bootstrapId: "cucp_1"

acc-fiveg-pm-controller:
  enabled: false

acc-fiveg-res-mgr:
  enabled: false

acc-fiveg-res-mgr-up:
  enabled: false

acc-fiveg-rr-ctrl:
  enabled: false

acc-fiveg-sctp:
  enabled: false

