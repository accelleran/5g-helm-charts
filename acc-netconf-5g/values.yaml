# Default values for five-g-appl.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: accelleran/netconf
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: accelleran-secret
nameOverride: ""
fullnameOverride: ""

# Application Settings
cmd: "./ncstart"
#cmd: "sleep 3600"

# testing:
  # value: "${GTP_IP}"

initImage:
  repository: accelleran/acc-generic-img
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

initGetConfig: []
#  - resourceType: 'service'
#    resourceName: '{{ include "five-g-appl.fullname" . }}-gtp'
#    resourceNamespace: '{{ .Release.Namespace }}'
#    field: '.status.loadBalancer.ingress[0].ip'
#    # Environmental variable have to be ALL CAPS
#    envName: "GTP_IP"

initNetconfModel:
  enabled: true

initNetconfDefaultPath:
  enabled: true
  #repository: accelleran/acc-generic-img
  #version: 0.3.0
  #securityContext:
  #  runAsUser: 0
  #pullPolicy: IfNotPresent
  # Carfull when putting this to service url, as the service might not be up when this is used
  host: 'localhost'
  componentType: 'cuup'

configOnBoot:
  enabled: false
  deleteExistingConfig: false
  host: 'localhost'
  configId: "cw"
  cwConfig:
    monitorControlConfiguration:
      monitorRate:
        seconds: 20
        miliSeconds: 0
    autoRepairerConfiguration:
      numberOfContainersCounterThreshold: 2
      l1RruTrafficCounterThreshold: 3
      saveLogRequestStatus: true
    physicalCellConfiguration:
      publicKey: "/home/accelleran/5G/ssh/public"
      privateKey: "/home/accelleran/5G/ssh/private"
    distributedUnit:
      name: du-1
      type: phluido
      logSourcePath: /run/logs-du/du
      logDestinationPath: /home/ad/granny/logs-du-backup
      connectionDetails:
        host: 10.22.11.147
        port: 22
        username: ad
      dockerComposeDetails:
        filePath: /home/ad/granny/config/du/benetel650/docker-compose.yml
        serviceName: du
        containerName: gnb_du_main_phluido
      layer1:
        name: l1-1
        type: phluido
        logSourcePath: /run/logs-du/l1
        logDestinationPath: /home/ad/granny/logs-du-backup
        dockerComposeDetails:
          filePath: /home/ad/granny/config/du/benetel650/docker-compose.yml
          serviceName: phluido_l1
          containerName: phluido_l1
      radioUnit:
        name: ru-1
        type: benetel650
        connectionDetails:
          host: 10.10.0.100
          port: 22
          username: root


args: []
#  - name: "--own"
#    value: 127.0.0.2
#  - name: "--pub"
#    value: 127.0.0.2

extraEnvs: []
#  - name: BOOTSTRAP_FILENAME
#    value: /home/accelleran/5G/bootstrap.txt

redisConfig:
  hostname: "10.55.1.2"
  port: "32200"

nats:
  url: "10.55.1.2"
  port: "31100"


# The boostrap id should contain only lower case aplhanumeric characters and/or '-', start with an alphabetic character, and end with an alphanumeric character
bootstrapId: "cuup1"
gnbId: "gnb1"
bootstrapFile: /home/accelleran/5G/bootstrap.txt

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: 
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 0
  privileged: true

netconfService:
  enabled: true
  type: NodePort
  port: 830
  name: netconf
  protocol: TCP

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

draxNodeSelectorEnabled: "false"

draxNodeSelector:
  draxName: "main"

tolerations: []

affinity: {}
