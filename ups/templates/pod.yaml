{{- $count := (tpl .Values.numberOfUpStacks . | int) -}}
{{- range untilStep 0 $count 1 }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "acc-common.fullname" $ }}-{{ . | toString }}
  {{- with $.Values.podAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "acc-common.labels.5g" $ | nindent 4 }}
    up-stack-id: {{ . | quote }}
spec:
  {{- with $.Values.imagePullSecrets }}
  imagePullSecrets:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  serviceAccountName: {{ include "acc-common.serviceAccountName" $ }}
  securityContext:
    {{- toYaml $.Values.podSecurityContext | nindent 4 }}
  initContainers:
    - name: {{ $.Chart.Name }}-get-init-configs-{{ . }}
      image: "{{ $.Values.initGetConfigImage.repository }}:{{ tpl $.Values.initGetConfigImage.tag $ }}"
      imagePullPolicy: {{ $.Values.initGetConfigImage.pullPolicy }}
      volumeMounts:
        - name: init-volume
          mountPath: /init-configs/
      command:
        - sh
        - "-c"
        - |
          /bin/bash <<'EOF'

          #!/bin/bash

          value=$(kubectl get service {{ include "acc-common.fullname" $ }}-gtp-{{ . }} -n {{ $.Release.Namespace }} -o json | jq ".status.loadBalancer.ingress[0].ip")

          echo "GTP_IP=$value" >> /init-configs/env.env

          {{ if $.Values.initGetConfig }}

          {{ range $.Values.initGetConfig }}

          value=$(kubectl get {{ .resourceType }} {{ tpl .resourceName $ }} -n {{ tpl .resourceNamespace $ }} -o json | jq "{{ .field }}")

          echo "{{ .envName }}=$value" >> /init-configs/env.env

          {{ end }}

          {{ end }}

          EOF
  containers:
    - name: {{ $.Chart.Name }}-{{ . }}
      securityContext:
        {{- toYaml $.Values.securityContext | nindent 8 }}
      image: "{{ $.Values.image.repository }}:{{ tpl $.Values.image.tag $ | default $.Chart.AppVersion }}"
      imagePullPolicy: {{ $.Values.image.pullPolicy }}
      command:
        - sh
        - "-c"
        - |
          /bin/bash <<'EOF'

          #!/bin/bash

          export $(xargs < /init-configs/env.env)

          echo {{ $.Values.testing.value }} > /init-configs/test.txt

          {{ $.Values.cmd }} {{- if $.Values.args }}{{ range $.Values.args }} {{ .name }} {{ tpl .value $ }}{{ end }}{{- end }}

          EOF
      env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: __APPID
          value: ups_{{ . }}
        - name: __APPNAME
          value: ups
        - name: NATS_SERVICE_URL
          value: "nats://{{ tpl $.Values.nats.url $ }}:{{ tpl $.Values.nats.port $ }}"
        - name: BOOTSTRAP_FILENAME
          value: "{{ $.Values.bootstrapFile }}"
        - name: JAEGER_AGENT_HOST
          value: "{{ tpl $.Values.jaegerAgentHost $ }}"
        {{- if $.Values.extraEnvs }}
        {{ toYaml $.Values.extraEnvs | nindent 8 }}
        {{- end }}
      ports:
        - name: gtpu
          containerPort: {{ $.Values.gtpService.gtpUPort }}
          protocol: {{ $.Values.gtpService.protocol }}
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
      volumeMounts:
        - name: init-volume
          mountPath: /init-configs/
        - name: {{ include "acc-common.fullname" $ }}-bootstrap
          mountPath: {{ $.Values.bootstrapFile }}
          subPath: "bootstrap.txt"
      resources:
        {{- toYaml $.Values.resources | nindent 8 }}
      lifecycle:
        preStop:
          exec:
            command: [ '/bin/sh', '-c', 'pkill -15 -e {{ $.Values.cmd | trimPrefix "./" | trimSuffix ".exe" | trunc 15  }}' ]
  {{- if or ($.Values.nodeSelector) (eq (tpl $.Values.draxNodeSelectorEnabled $) "true") }}
  nodeSelector:
    {{ if $.Values.nodeSelector }}
      {{- toYaml $.Values.nodeSelector | nindent 4 }}
    {{ end }}
    {{ if eq (tpl $.Values.draxNodeSelectorEnabled $) "true" }}
      {{- tpl (toYaml $.Values.draxNodeSelector) $ | nindent 4 }}
    {{ end }}
  {{- end }}
  {{- with $.Values.affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with $.Values.tolerations }}
  tolerations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  volumes:
    - name: init-volume
      emptyDir: {}
    - name: {{ include "acc-common.fullname" $ }}-bootstrap
      configMap:
        name: {{ include "acc-common.fullname" $ }}-bootstrap
---
{{- end }}
